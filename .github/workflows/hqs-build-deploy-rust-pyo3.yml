name: HQS build and deploy for rust pyo3 repos

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:

  deploy_cratesio:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
    #- uses: Swatinem/rust-cache@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
    - name: setup cargo
      run: |
        # Authentication at crates.io with HQS organizational token
        cargo login ${{ secrets.CRATES_IO_API_TOKEN }}
        # publishing a specific package to crates.io
        cargo publish --manifest-path=roqoqo_for_braket_devices/Cargo.toml
        # Wait to publish next package (e.g. the Python interface)
        # that depends on previous package so that crates.io is
        # updated and accepts the upload
        sleep 60
        # Publish second package
        cargo publish --manifest-path=qoqo_for_braket_devices/Cargo.toml

  test_maturin_builds_linux:
    name: maturin_check_linux-${{ matrix.python.interpreter }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python: [
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
        ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy
          pip install qoqo_for_braket_devices/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest qoqo_for_braket_devices/python_tests

  test_maturin_builds_windows:
    name: maturin_check_windows-${{ matrix.python.interpreter }}
    if: ${{ inputs.windows }}
    runs-on: "windows-latest"
    strategy:
      matrix:
        python: [
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
        ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python.py }}'
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy
          pip install qoqo_for_braket_devices/

  test_maturin_builds_macos:
    name: maturin_check_macos-${{ matrix.python.interpreter }}
    runs-on: "macOS-13"
    strategy:
      matrix:
        python: [
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
        ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "aarch64-apple-darwin"
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install dependencies
        run: |
          python -m pip install maturin pytest numpy
          python -m pip install qoqo_for_braket_devices/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest qoqo_for_braket_devices/python_tests
